% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wms_all.R
\name{catr_wms_layer}
\alias{catr_wms_layer}
\title{\strong{WMS INSPIRE}: Download map images}
\usage{
catr_wms_layer(
  bbox,
  srs,
  what = "building",
  update_cache = FALSE,
  cache_dir = NULL,
  verbose = FALSE,
  crop = FALSE,
  ...
)
}
\arguments{
\item{bbox}{A numeric vector of length 4 with the coordinates that defines
the bounding box: \code{c(xmin, ymin, xmax, ymax)} or a \code{sf/sfc} object, as
provided by the \strong{sf} package.}

\item{srs}{SRS/CRS to use on the query. To check the admitted values check
\link{catr_srs_values}, specifically the \code{wfs_service} column. See \strong{Details}.}

\item{what}{Layer to be extracted. Possible values are \code{"building"},
\code{"parcel"}, \code{"zoning"}, \code{"address"}. See \strong{Details}.}

\item{update_cache}{A logical whether to update cache. Default is \code{FALSE}.
When set to \code{TRUE} it would force a fresh download of the source file.}

\item{cache_dir}{A path to a cache directory. On missing value the function
would store the cached files on a temporary dir (See \code{\link[base:tempfile]{base::tempdir()}}).}

\item{verbose}{Logical, displays information. Useful for debugging,
default is \code{FALSE}.}

\item{crop}{\code{TRUE} if results should be cropped to the specified \code{bbox}
extent, \code{FALSE} otherwise.}

\item{...}{
  Arguments passed on to \code{\link[mapSpain:esp_getTiles]{mapSpain::esp_getTiles}}
  \describe{
    \item{\code{res}}{Resolution (in pixels) of the final tile. Only valid for WMS.}
    \item{\code{bbox_expand}}{A numeric value that indicates the expansion percentage
of the bounding box of \code{x}.}
    \item{\code{transparent}}{Logical. Provides transparent background, if supported.
Depends on the selected provider on \code{type}.}
    \item{\code{mask}}{\code{TRUE} if the result should be masked to \code{x}.}
  }}
}
\value{
A \code{SpatRaster} is returned, with 3 (RGB) or 4 (RGBA) layers. See
\code{\link[terra:rast]{terra::rast()}}.
}
\description{
Get geotagged images from the Spanish Cadastre. This function is a wrapper of
\code{\link[mapSpain:esp_getTiles]{mapSpain::esp_getTiles()}}.
}
\details{
When \code{bbox} is a numeric vector, make sure that the \code{srs} matches the
coordinate values. When \code{bbox} is a \code{sf} object, the value \code{srs} is ignored.

The query is performed using \href{https://epsg.io/3857}{EPSG:3857} (Web Mercator)
and the spatial object is projected back to the SRS of the initial object. In
case that the tile looks deformed, try either providing \code{bbox} on EPSG:3857
or projecting your \code{sf} object to \code{sf::st_crs(3857)}.
}
\section{Layers}{
The parameter \code{what} defines the layer to be extracted. The equivalence with
the \href{https://www.catastro.minhap.es/webinspire/documentos/inspire-WMS.pdf}{API Docs}
is:
\itemize{
\item "building": BU.Building
\item "parcel": CP..CadastralParcel
\item "zoning": CP.CadastralZoning
\item "address": AD.Address
}

Tiles are provided always in the default style.
}

\examples{
\dontshow{if (tolower(Sys.info()[["sysname"]]) != "linux") (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
\donttest{

# With a bbox

pict <- catr_wms_layer(c(222500, 4019500, 223700, 4020700),
  srs = 25830,
  what = "parcel"
)

library(ggplot2)
library(mapSpain)

ggplot() +
  layer_spatraster(pict)


# With a spatial object

parcels <- catr_wfs_cp_neigh_parcel("3662303TF3136B")

# Transform
parcels <- sf::st_transform(parcels, 3857)

parcels_img <- catr_wms_layer(parcels,
  what = "building",
  transparent = FALSE,
  bbox_expand = 0.3
)


ggplot() +
  layer_spatraster(parcels_img) +
  geom_sf(data = parcels, fill = "red", alpha = 0.5, col = "green")
}
\dontshow{\}) # examplesIf}
}
\references{
\href{https://www.catastro.minhap.es/webinspire/documentos/inspire-WMS.pdf}{API Documentation}

\href{https://www.catastro.minhap.es/webinspire/index.html}{INSPIRE Services for Cadastral Cartography}
}
\seealso{
\code{\link[mapSpain:esp_getTiles]{mapSpain::esp_getTiles()}}, \code{\link[mapSpain:layer_spatraster]{mapSpain::layer_spatraster()}},
\code{\link[terra:plotRGB]{terra::plotRGB()}}.

INSPIRE API functions:
\code{\link{catr_atom_ad_db_all}()},
\code{\link{catr_atom_ad}()},
\code{\link{catr_atom_bu_db_all}()},
\code{\link{catr_atom_bu}()},
\code{\link{catr_atom_cp_db_all}()},
\code{\link{catr_atom_cp}()},
\code{\link{catr_wfs_ad_bbox}()},
\code{\link{catr_wfs_bu_bbox}()},
\code{\link{catr_wfs_cp_bbox}()}

Other spatial: 
\code{\link{catr_atom_ad}()},
\code{\link{catr_atom_bu}()},
\code{\link{catr_atom_cp}()},
\code{\link{catr_wfs_ad_bbox}()},
\code{\link{catr_wfs_bu_bbox}()},
\code{\link{catr_wfs_cp_bbox}()}
}
\concept{INSPIRE}
\concept{WMS}
\concept{spatial}
